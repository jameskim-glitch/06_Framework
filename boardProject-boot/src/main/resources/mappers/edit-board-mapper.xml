<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.project.myPage.model.mapper.EditBoardMapper">
   
   <!--
   		useGeneratedKeys 속성 : DB 내부적으로 생성한 키(시퀀스)를
   		전달된 파라미터의 필드로 대입 가능 여부 지정
   		
   		** 동적 SQL **
   		- 프로그램 수행 중 SQL을 변경하는 기능(마이바티스의 가장 강력한 기능!)
   		
   		<selectKey> 태그 : INSERT / UPDATE 시 사용할 키 (시퀀스)를
   							조회에서 파라미터의 지정된 필드에 대입
   							
   		order 속성 : 메인 SQL 이 수행되기 전/후에 selectKey 가 수행되도록 지정
   		전 : BEFORE 후 : AFTER
   		
   		keyProperty 속성 : selectKey 조회 결과를 저장할 파라미터의 필드명
    -->
	<insert id="boardInsert" useGeneratedKeys="true" parameterType="Board">
		<selectKey order="BEFORE" resultType ="_int" keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO "BOARD"
		VALUES(#{boardNo},
				#{boardTitle},
				#{boardContent}, DEFAULT, DEFAULT,DEFAULT,DEFAULT,
				#{boardCode},#{memberNo})
	</insert>
	
	<!-- 
		동적 SQL 중 <foreach>
		- mybatis 에서 제공하는 향상된 for 문
		
		- 특정 sql 구문을 반복할 때 사용
		
		- 반복 사이에 구분자(separator) 를 추가할 수 있음
		
		[지원하는 속성]
		collection : 반복할 객체의 타입 작성(list, set...)
		item : collection 에서 순차적으로 꺼낸 하나의 요소를 저장하는 변수
		index : 현재 반복 접근중인 인덱스(0,1,2,3...)
		open : 반복전에 출력할 sql
		close : 반복 종료 후에 출력할 sql
		separator : 반복 사이 구분자
			-->
<insert id="insertUploadList">
  INSERT INTO "BOARD_IMG" (
    IMG_NO, IMG_PATH, IMG_ORIGINAL_NAME, IMG_RENAME, IMG_ORDER, BOARD_NO
  )
  <foreach collection="list" item="img" separator=" UNION ALL ">
    SELECT NEXT_IMG_NO(), 
           #{img.imgPath}, 
           #{img.imgOriginalName}, 
           #{img.imgRename}, 
           #{img.imgOrder}, 
           #{img.boardNo}
    FROM DUAL
  </foreach>
</insert>

	<!-- 게시글 부분 수정 -->
	<update id="boardUpdate">
		UPDATE "BOARD" SET
		BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT = #{boardContent}
		WHERE BOARD_CODE = #{boardCode}
		AND BOARD_NO = #{boardNo}
		AND MEMBER_NO = #{memberNo}
		</update>
		
	<!-- 게시글 이미지 삭제 -->
	<delete id="deleteImage">
		DELETE FROM "BOARD_IMG"
		WHERE BOARD_NO = #{boardNo}
		AND IMG_ORDER IN(${deleteOrderList})
	</delete>
	
	<!-- 게시글 이미지 1행 수정 -->
	<update id="updateImg">
		UPDATE "BOARD_IMG" SET
		IMG_ORIGINAL_NAME = #{imgOriginalName},
		IMG_RENAME = #{imgRename}
		WHERE BOARD_NO = #{boardNo}
		AND IMG_ORDER = #{imgOrder}	
	</update>
	
	<!-- 게시글 이미지 1행 삽입 -->
	<insert id="insertImg">
		INSERT INTO "BOARD_IMG"
		VALUES(NEXT_IMG_NO(),
			#{imgPath},
			#{imgOriginalName},
			#{imgRename},
			#{imgOrder},
			#{boardNo}
		)
	</insert>
   
</mapper>






