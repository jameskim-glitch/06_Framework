# properties 파일 생성시 Genenral > File 만들면 된다
# config.properties 는 DB 연결 정보를 작성할 것이기 때문에 .gitignore 에 작성해야 함.

# DB 연결 정보

#오라클 DB 연결 정보
spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.hikari.username=boardProject
spring.datasource.hikari.password=board1234

#풀의 최대 연결 수 설정
spring.datasource.hikari.maximum-pool-size=20

# HikariCP Connection Pool Properties
#풀이 연결을 사용할 수 있을 때까지 대기하는 최대 시간(ms)을 지정
spring.datasource.hikari.connection-timeout=30000


#커넥션이 풀에서 유휴 상태로 있을 수 있는 최대 시간(ms)을 지정
# 유휴 : 사용하지 않고 놀고 있는 커넥션을 얼마나 오래 살려둘지 설정하는것
spring.datasource.hikari.idle-timeout=600000

#커넥션 풀의 이름을 지정
spring.datasource.hikari.pool-name=MyHikariCP

## 반납은 언제?
## Connection.close() 될때! -> Spring 은 내부적으로 알아서 DB 작업후 Close()
## 호출하여 커넥션 반납을 함(자동)


#자동 커밋 끄기
spring.datasource.hikari.auto-commit=false

#------------------------------------------

#Google SMTP 에 사용할 username, password(앱 비밀번호)
spring.mail.username=ehxnwk@gmail.com
spring.mail.password=muwvndjwwrusdpnm

#----------------------------------------------------
#1. 파일을 디스크에 쓸 때 까지의 임계값
#업로드 되는 파일은 메모리에 저장(50MB)하다가 초과시 디스크에 저장
# 기본값 : 0B
# 1MB = 1024 KB
# 1KB = 1024 B
spring.servlet.multipart.file-size-threshold=52428800

#2. HTTP 요청 당 최대 크기
#기본값 : 10MB
spring.servlet.multipart.max-request-size=52428800 

#3. 개별 파일당 최대 크기
#기본 값 : 1MB
# 10MB : 10485760 B
spring.servlet.multipart.max-file-size=10485760


#4. 임계값 초과시 파일의 임시 저장 경로(서버 컴퓨터 내의 모 경로)
spring.servlet.multipart.location=C:/uploadFiles/temp/

